version: "3.8"

services:
  zookeeper:
    container_name: kafkazookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    networks:
      springboot-mysql-net:
  kafka:
    container_name: kafkamq
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    networks:
      springboot-mysql-net:
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  mysqldb:
    container_name: mysqldb
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: userDb
    ports:
      - 0.0.0.0:3306:3306
    volumes:
      - ./mysql-data:/var/lib/mysql
    networks:
      springboot-mysql-net:

  springboot-restful-webservices:
     container_name: springboot-restful-webservices
     build:
       context: .
       dockerfile: Dockerfile
     ports:
       - "8200:8100"
     depends_on:
       - mysqldb
       - kafka
       - zookeeper
     networks:
       springboot-mysql-net:
    #  restart: on-failure

networks:
  springboot-mysql-net:
